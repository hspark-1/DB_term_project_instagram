<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<title>DMdetail</title>
</head>
<body>
	<table class="table">
		<thead>
		<tr>
		  <th scope="col">id</th>
		  <th scope="col">sender</th>
		  <th scope="col">receiver</th>
		  <th scope="col">comment</th>
		  <th scope="col">time</th>
		</tr>
		</thead>
		<tbody>
			<input type="hidden" value="{{user.user_id}}" id="user_id">
			{{#DMdetail}}
			<input type="hidden" value="{{sender_id}}" id="sender_id">
			<input type="hidden" value="{{comment}}" id="comment">
			{{/DMdetail}}
			<div id="inner"></div>
		</tbody>
	</table>
	<script>
		const div = document.querySelector("#inner");
		
		var user_id = document.querySelector("#user_id");
		var a = document.querySelectorAll("#sender_id");
		var b = document.querySelectorAll("#comment");
		var x = [];
		var y = [];
		for(var i = 0; i <= a.length-1; i++){
			x.push(a[i].value);
			y.push(b[i].value);
			if(x[i] == user_id.value) {
				document.write("<div style=\"position: relative; right: 700px; float: right;\">"+y[i]+"</div><br>");
			}
			else {
				document.write("<div style=\"position: relative; left: 500px; float: left;\">"+y[i]+"</div><br>");
			}
		}

	</script>

	<form style="position: absolute; bottom: 0; width: 100%;">
		<input type="hidden" value="{{user.user_id}}" id="getsender_id">
		<input type="hidden" value="{{senderId.user_id}}" id="getreceiver_id">
		<div style="border-radius: 10px; border: 1px solid black; position: absolute; left: 10px; float: left; bottom: 0; width: 1500px; height: 100px; padding-bottom: calc(var(--base-unit) * 5); padding-top: calc(var(--base-unit) * 5); padding-left: calc(var(--base-unit) * 5); padding-right: calc(var(--base-unit) * 5);">
			<div style="border: none; position: relative; top: 7px; width: 95%; height: 80px; margin: 0px; padding-bottom: calc(var(--base-unit) * 5); padding-top: calc(var(--base-unit) * 5); padding-left: calc(var(--base-unit) * 5); padding-right: calc(var(--base-unit) * 5);">
				<textarea id="getcomment" name="comment" style="border: none; outline: none; border-style: none; border-color: Transparent; width: 100%; resize: none; height: 100%; text-rendering: auto; overflow: auto; padding: 8px 9px; writing-mode: horizontal-tb !important;" placeholder="메시지 입력..." class="" style="height: 18px !important;"></textarea>
			</div>
			<div style="position: relative; right: 5px; float: right; bottom: 50%; ">
				<button id="dm-create-btn" style="position: relative; font-size: 15pt; border: none; background: none; color:blue; height: 42px; display: inline-block; padding: 0!important; text-align: center; width: auto;" type="button"><b>submit</b></button>
			</div>
		</div>
	</form>

	<script>
		{
			// 수정 완료 버튼
			const commentUpdateBtn = document.querySelector("#dm-create-btn");

			// 클릭 이벤트 감지 및 처리
			commentUpdateBtn.addEventListener("click", function() {
				const date = new Date();
				const year = date.getFullYear();
				const month = ('0' + (date.getMonth() + 1)).slice(-2);
				const day = ('0' + date.getDate()).slice(-2);
				const dateStr = year + '-' + month + '-' + day;
				const hours = ('0' + date.getHours()).slice(-2);
				const minutes = ('0' + date.getMinutes()).slice(-2);
				const seconds = ('0' + date.getSeconds()).slice(-2);
				const timeStr = hours + ':' + minutes + ':' + seconds;

				// 수정 댓글 객체 생성
				const comment = {
					sender_id: document.querySelector("#getsender_id").value,
					receiver_id: document.querySelector("#getreceiver_id").value,
					Comment: document.querySelector("#getcomment").value,
					time: dateStr + "T" + timeStr
				};

				document.writeln(dateStr);
				document.write(timeStr);
				console.log(comment);

				// fetch() - Talend API 요청을 JavaScript로 보내준다!
				const url = "/api/create/DM";
				fetch(url, {
					method: "post",
					body: JSON.stringify(comment),
					headers: {
						"Content-Type": "application/json"
					}
				}).then(response => {
					// http 응답 코드에 따른 메세지 출력
					const msg = (response.ok) ? "댓글이 등록되었습니다." : "댓글 등록 실패..!";
					alert(msg);
					// 현재 페이지 새로고침
					window.location.reload();
				});
			});

		}
	</script>
</body>
</html>